* Dot Emacs

这里是我的Emacs配置，其中有一些个人写的elisp hack，欢迎试用、吐槽。

** 功能

根据我个人的需要，目前这套配置实现了下面的功能：

*** Emacs Starter Kit

此配置使用了[[https://github.com/technomancy/emacs-starter-kit][Emacs Starter Kit]]，使用了starter-kit-bindings，
starter-kit-eshell和starter-kit-lisp这几个模块。

*** 包管理

init.el里列出了配置所需要的包，并将流行的elpa repo加到列表里了，启动
Emacs时会自动检查所需的包是否已安装，如果没有则会自动安装。

*** Clojure IDE

依赖clojure-mode和nrepl.el实现的Clojure IDE

*** 自动补全

使用auto-complete插件实现的自动补全，默认使用auto-complete内置的
dictionary，words-in-the-same-buffer等source，并支持clojure和python补
全。

- Clojure补全

  借用了[[https://github.com/overtone/emacs-live][Emacs Live]]的部分配置以实现Clojure的补全，需要启动nrepl.el之后
  才能生效（其机制是动态发送clojure代码到nrepl中执行以获取补全列表，因
  此其性能也不好，会有卡顿）。

- 补全快捷键优化

  因为Clojure的补全比较慢，所以Clojure模式下默认的自动补全不会使用
  nrepl的source，如果要使用基于nrepl的补全，则可以使用 =M-/= 来触发。
  同样Python的补全也有类似的优化，同时Python模式下还支持通过 =.= 来触
  发补全，在一个对象/模块等后面输入 =.= 可以自动触发补全并打开补全列表。

*** yasnippet

内置部分个人收集、编写的snippets，请参照snippets子目录。

*** 字体和配色

字体默认使用了Hiragino Snas GB，配色使用了solarized-light。如
果需要修改字体和配色，请查看并修改settings.el。

*** 自定义的功能和按键绑定

=C-o= 类似Vim的 =o= ，在当前行之后插入新行（并加上合适的缩进）

=M-o= 类似Vim的 =O= ，在当前行之前插入新行（并加上合适的缩进）

=C-<dot>= 切换到下一个buffer

=C-<comma>= 切换到上一个buffer

** 安装

clone本repo到~/.emacs.d，启动Emacs即可。

** 一建格式化

ref:http://www.blogjava.net/killme2008/archive/2011/07/26/355041.html

格式化源码是很常见的需求，emacs有个indent-region函数用于格式化选定的代码，前提是你处在某个非text mode下，如c-mode或者java-mode之类。如果要格式化整个文件，你需要先选定整个文件(C-x-h)，然后调用indent-region（或者 C-M-\ )。两个命令总是麻烦，我们可以定义个函数搞定这一切，并绑定在一个特定键上，实现一键格式化：

#+BEGIN_SRC bash
;;格式化整个文件函数
(defun indent-whole ()
  (interactive)
  (indent-region (point-min) (point-max))
  (message "format successfully"))
;;绑定到F7键
(global-set-key [f7] 'indent-whole)
#+END_SRC

将这段代码添加到你的emacs配置文件（~/.emacs)，重启emacs，以后格式化源码都可以用F7一键搞定。


#+BEGIN_SRC bash
cd ~
git clone git://github.com/laizhihuan/dotemacs.git .emacs.d
#+END_SRC

